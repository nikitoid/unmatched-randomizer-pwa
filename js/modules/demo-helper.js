// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –º–æ–¥—É–ª—è
// –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤

window.modalDemoHelper = {
  // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
  async waitForModule(moduleName, maxAttempts = 10, delay = 500) {
    for (let i = 0; i < maxAttempts; i++) {
      const module = window.getModule && window.getModule(moduleName);
      if (module) {
        return module;
      }
      await new Promise(resolve => setTimeout(resolve, delay));
    }
    throw new Error(`Module "${moduleName}" not loaded after ${maxAttempts} attempts`);
  },

  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è
  async getSafeModule(moduleName) {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø
      if (window.getModule) {
        const module = window.getModule(moduleName);
        if (module) return module;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ app
      if (window.app && window.app.getModule) {
        const module = window.app.getModule(moduleName);
        if (module) return module;
      }

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
      return await this.waitForModule(moduleName);
    } catch (error) {
      console.error(`Failed to get module "${moduleName}":`, error);
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—à–∏–±–∫—É
      alert(`–ú–æ–¥—É–ª—å "${moduleName}" –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.`);
      return null;
    }
  },

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  showError(message) {
    const errorDiv = document.createElement('div');
    errorDiv.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      background: #ef4444;
      color: white;
      padding: 16px;
      border-radius: 8px;
      z-index: 10000;
      max-width: 300px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    `;
    errorDiv.textContent = message;
    document.body.appendChild(errorDiv);
    
    setTimeout(() => {
      errorDiv.remove();
    }, 5000);
  }
};

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
window.modalDemo = {
  // –ü–æ–ª—É—á–∏—Ç—å –º–æ–¥—É–ª—å –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  async getModalModule() {
    return await window.modalDemoHelper.getSafeModule('modal');
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  async showCenter() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      modal.showCenter(`
        <h3 style="margin: 0 0 16px 0; color: #1e293b;">–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</h3>
        <p style="margin: 0; color: #64748b;">–≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è.</p>
      `, {
        title: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è',
        animation: 'fadeIn'
      });
    } catch (error) {
      console.error('Error showing center modal:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  async showConfirm() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      const result = await modal.confirm(
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.',
        {
          title: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è',
          confirmText: '–î–∞, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
          cancelText: '–û—Ç–º–µ–Ω–∞',
          animation: 'slideUp'
        }
      );
      
      if (result) {
        modal.alert('–î–µ–π—Å—Ç–≤–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!', { title: '–£—Å–ø–µ—Ö', animation: 'fadeIn' });
      } else {
        modal.alert('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', { title: '–û—Ç–º–µ–Ω–µ–Ω–æ', animation: 'fadeIn' });
      }
    } catch (error) {
      console.error('Error showing confirm modal:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –¥–∏–∞–ª–æ–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
  async showAlert() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      await modal.alert(
        '–≠—Ç–æ –≤–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.',
        {
          title: '‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ',
          confirmText: '–ü–æ–Ω—è—Ç–Ω–æ',
          animation: 'scale'
        }
      );
    } catch (error) {
      console.error('Error showing alert modal:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è');
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å Bottom Sheet
  async showBottomSheet() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      modal.showBottomSheet(`
        <h3 style="margin: 0 0 16px 0; color: #1e293b;">Bottom Sheet</h3>
        <p style="margin: 0 0 16px 0; color: #64748b;">
          –≠—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–µ–∑–∂–∞–µ—Ç —Å–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞, —É–¥–æ–±–Ω–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.
        </p>
        <div style="background: #f8fafc; padding: 16px; border-radius: 8px; margin-top: 16px;">
          <p style="margin: 0; font-size: 14px; color: #64748b;">
            üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ –æ–∫–Ω–æ —Å–≤–∞–π–ø–æ–º –≤–Ω–∏–∑ –∏–ª–∏ –∫–ª–∏–∫–æ–º –Ω–∞ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å.
          </p>
        </div>
      `, {
        title: 'Bottom Sheet Demo'
      });
    } catch (error) {
      console.error('Error showing bottom sheet:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ Bottom Sheet');
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –≤ Bottom Sheet
  async showBottomSheetMenu() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      modal.showBottomSheet(`
        <div style="padding: 8px 0;">
          <div style="margin-bottom: 16px; padding-bottom: 16px; border-bottom: 1px solid #e2e8f0;">
            <h4 style="margin: 0; color: #1e293b;">–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ</h4>
          </div>
          <div onclick="this.closest('.modal-overlay').querySelector('.modal-close').click(); window.modalDemo.handleAction('share')" 
               style="padding: 16px; border-radius: 8px; cursor: pointer; margin-bottom: 8px; background: #f8fafc; border: 1px solid #e2e8f0; transition: background-color 0.2s;">
            üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
          </div>
          <div onclick="this.closest('.modal-overlay').querySelector('.modal-close').click(); window.modalDemo.handleAction('edit')" 
               style="padding: 16px; border-radius: 8px; cursor: pointer; margin-bottom: 8px; background: #f8fafc; border: 1px solid #e2e8f0; transition: background-color 0.2s;">
            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
          </div>
          <div onclick="this.closest('.modal-overlay').querySelector('.modal-close').click(); window.modalDemo.handleAction('delete')" 
               style="padding: 16px; border-radius: 8px; cursor: pointer; margin-bottom: 8px; background: #fef2f2; border: 1px solid #fecaca; color: #dc2626; transition: background-color 0.2s;">
            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
          </div>
        </div>
      `, {
        title: '–ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π',
        showCloseButton: false
      });
    } catch (error) {
      console.error('Error showing bottom sheet menu:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π');
    }
  },

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –∏–∑ –º–µ–Ω—é
  async handleAction(action) {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      const actions = {
        share: '–§—É–Ω–∫—Ü–∏—è "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!',
        edit: '–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...',
        delete: '–≠–ª–µ–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω!'
      };
      
      await modal.alert(actions[action] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ', {
        title: '–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ',
        animation: 'fadeIn'
      });
    } catch (error) {
      console.error('Error handling action:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è');
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  async showFullscreen() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      modal.showFullscreen(`
        <div style="padding: 40px 20px; text-align: center; height: 100%; display: flex; flex-direction: column; justify-content: center;">
          <h2 style="margin: 0 0 24px 0; color: #1e293b; font-size: 2em;">–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</h2>
          <p style="margin: 0 0 32px 0; color: #64748b; font-size: 1.1em; max-width: 600px; margin-left: auto; margin-right: auto;">
            –≠—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–æ—Ä–º, –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∏–ª–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π.
          </p>
          <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 40px; border-radius: 16px; color: white; margin: 20px auto; max-width: 500px;">
            <h3 style="margin: 0 0 16px 0;">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:</h3>
            <ul style="text-align: left; margin: 0; padding-left: 20px;">
              <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞</li>
              <li>–ò–º–º–µ—Ä—Å–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç</li>
              <li>–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</li>
              <li>–û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</li>
            </ul>
          </div>
        </div>
      `, {
        title: '–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è',
        animation: 'fadeIn'
      });
    } catch (error) {
      console.error('Error showing fullscreen modal:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞');
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
  async showFullscreenForm() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      modal.showFullscreen(`
        <div style="max-width: 600px; margin: 0 auto; padding: 40px 20px;">
          <h2 style="margin: 0 0 24px 0; color: #1e293b;">–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</h2>
          <form style="space-y: 20px;">
            <div style="margin-bottom: 20px;">
              <label style="display: block; margin-bottom: 8px; font-weight: 500; color: #374151;">–ò–º—è:</label>
              <input type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" 
                     style="width: 100%; padding: 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 16px;">
            </div>
            <div style="margin-bottom: 20px;">
              <label style="display: block; margin-bottom: 8px; font-weight: 500; color: #374151;">Email:</label>
              <input type="email" placeholder="your@email.com" 
                     style="width: 100%; padding: 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 16px;">
            </div>
            <div style="margin-bottom: 20px;">
              <label style="display: block; margin-bottom: 8px; font-weight: 500; color: #374151;">–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
              <textarea placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." rows="5"
                        style="width: 100%; padding: 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 16px; resize: vertical;"></textarea>
            </div>
            <div style="flex: 1; display: flex; gap: 12px; justify-content: flex-end; margin-top: 32px;">
              <button type="button" onclick="this.closest('.modal-overlay').querySelector('.modal-close').click()"
                      style="padding: 12px 24px; background: #6b7280; color: white; border: none; border-radius: 6px; cursor: pointer; font-size: 16px;">
                –û—Ç–º–µ–Ω–∞
              </button>
              <button type="button" onclick="window.modalDemo.submitForm(this)"
                      style="padding: 12px 24px; background: #3b82f6; color: white; border: none; border-radius: 6px; cursor: pointer; font-size: 16px;">
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
            </div>
          </form>
        </div>
      `, {
        title: '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
        animation: 'slideFromRight',
        showCloseButton: true
      });
    } catch (error) {
      console.error('Error showing fullscreen form:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ñ–æ—Ä–º—ã');
    }
  },

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  async submitForm(button) {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      button.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
      button.disabled = true;
      
      // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      setTimeout(async () => {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        button.closest('.modal-overlay').querySelector('.modal-close').click();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        await modal.alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', {
          title: '‚úÖ –£—Å–ø–µ—Ö',
          confirmText: '–û—Ç–ª–∏—á–Ω–æ!',
          animation: 'scale'
        });
      }, 1500);
    } catch (error) {
      console.error('Error submitting form:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã');
      button.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
      button.disabled = false;
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
  async showWithAnimation(animation) {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      const animations = {
        fadeIn: '–ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ',
        slideUp: '–í—ã–µ–∑–¥ —Å–Ω–∏–∑—É',
        slideFromRight: '–í—ã–µ–∑–¥ —Å–ø—Ä–∞–≤–∞',
        slideFromLeft: '–í—ã–µ–∑–¥ —Å–ª–µ–≤–∞',
        scale: '–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ'
      };
      
      modal.showCenter(`
        <h3 style="margin: 0 0 16px 0; color: #1e293b;">–ê–Ω–∏–º–∞—Ü–∏—è: ${animations[animation]}</h3>
        <p style="margin: 0; color: #64748b;">
          –≠—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é "${animation}". 
          –ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏!
        </p>
        <div style="background: #f3f4f6; padding: 16px; border-radius: 8px; margin-top: 16px; text-align: center;">
          <code style="background: #e5e7eb; padding: 4px 8px; border-radius: 4px; font-size: 14px;">
            animation: '${animation}'
          </code>
        </div>
      `, {
        title: `–î–µ–º–æ –∞–Ω–∏–º–∞—Ü–∏–∏: ${animation}`,
        animation: animation
      });
    } catch (error) {
      console.error('Error showing animation demo:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∞–Ω–∏–º–∞—Ü–∏–∏');
    }
  },

  // –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
  async hideAll() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      modal.hideAll();
    } catch (error) {
      console.error('Error hiding all modals:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω');
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö
  async showInfo() {
    const modal = await this.getModalModule();
    if (!modal) return;
    
    try {
      const info = modal.getModalsInfo();
      
      await modal.alert(`
        <h4 style="margin: 0 0 16px 0;">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö:</h4>
        <ul style="margin: 0; padding-left: 20px; text-align: left;">
          <li><strong>–û—Ç–∫—Ä—ã—Ç–æ:</strong> ${info.open} –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω</li>
          <li><strong>–í –æ—á–µ—Ä–µ–¥–∏:</strong> ${info.queue} –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω</li>
          <li><strong>–°–∫—Ä–æ–ª–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:</strong> ${info.bodyScrollLocked ? '–î–∞' : '–ù–µ—Ç'}</li>
          <li><strong>–¢–µ–∫—É—â–µ–µ:</strong> ${info.currentModal || '–ù–µ—Ç'}</li>
        </ul>
      `, {
        title: '–°—Ç–∞—Ç—É—Å –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –º–æ–¥—É–ª—è',
        confirmText: '–ó–∞–∫—Ä—ã—Ç—å',
        animation: 'fadeIn'
      });
    } catch (error) {
      console.error('Error showing modal info:', error);
      window.modalDemoHelper.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–∞–ª—è—Ö');
    }
  }
};

console.log('Modal demo helper loaded');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 500–º—Å
const checkAppReady = () => {
  if (window.app && window.app.isInitialized) {
    console.log('App is ready, modal demo functions available');
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    setTimeout(() => {
      const statusDiv = document.createElement('div');
      statusDiv.style.cssText = `
        position: fixed;
        bottom: 20px;
        left: 20px;
        background: #10b981;
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 12px;
        z-index: 1000;
        box-shadow: 0 2px 8px rgba(0,0,0,0.2);
        transition: opacity 0.3s ease;
      `;
      statusDiv.textContent = '‚úÖ –ú–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã';
      document.body.appendChild(statusDiv);
      
      setTimeout(() => {
        statusDiv.style.opacity = '0';
        setTimeout(() => statusDiv.remove(), 300);
      }, 3000);
    }, 1000);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 500–º—Å –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ
  setTimeout(checkAppReady, 500);
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
checkAppReady();
